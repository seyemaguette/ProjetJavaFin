/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package etudiant;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import etudiant.Register;
/**
 *
 * @author Soxna Maguette
 */
public class InfosEtudiant extends javax.swing.JFrame {

    /**
     * Creates new form NewEtudiant
     */
    public InfosEtudiant() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ModifierInfosEtudiant = new java.awt.Panel();
        label7 = new java.awt.Label();
        mail = new java.awt.TextField();
        button7 = new java.awt.Button();
        label8 = new java.awt.Label();
        textField8 = new java.awt.TextField();
        label9 = new java.awt.Label();
        codePermenant = new java.awt.TextField();
        label10 = new java.awt.Label();
        tel = new java.awt.TextField();
        label11 = new java.awt.Label();
        label12 = new java.awt.Label();
        prenom = new java.awt.TextField();
        naissance = new java.awt.TextField();
        label22 = new java.awt.Label();
        nom = new java.awt.TextField();
        errorLabel = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("InfosEtudiant");
        setBackground(new java.awt.Color(248, 248, 243));
        setMinimumSize(new java.awt.Dimension(800, 560));
        getContentPane().setLayout(null);

        ModifierInfosEtudiant.setBackground(new java.awt.Color(248, 248, 243));
        ModifierInfosEtudiant.setMinimumSize(new java.awt.Dimension(800, 560));
        ModifierInfosEtudiant.setLayout(null);

        label7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label7.setForeground(new java.awt.Color(102, 204, 255));
        label7.setText("Email  :");
        ModifierInfosEtudiant.add(label7);
        label7.setBounds(480, 160, 230, 25);

        mail.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ModifierInfosEtudiant.add(mail);
        mail.setBounds(480, 200, 210, 40);

        button7.setBackground(new java.awt.Color(102, 204, 255));
        button7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        button7.setForeground(new java.awt.Color(255, 255, 255));
        button7.setLabel("Enregistrer");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });
        ModifierInfosEtudiant.add(button7);
        button7.setBounds(480, 390, 210, 40);

        label8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label8.setForeground(new java.awt.Color(102, 204, 255));
        label8.setText("Domicile  :");
        ModifierInfosEtudiant.add(label8);
        label8.setBounds(480, 250, 230, 25);

        textField8.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField8ActionPerformed(evt);
            }
        });
        ModifierInfosEtudiant.add(textField8);
        textField8.setBounds(480, 290, 210, 40);

        label9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label9.setForeground(new java.awt.Color(102, 204, 255));
        label9.setText("Code Permenant  :");
        ModifierInfosEtudiant.add(label9);
        label9.setBounds(100, 50, 230, 25);

        codePermenant.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ModifierInfosEtudiant.add(codePermenant);
        codePermenant.setBounds(100, 90, 210, 40);

        label10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label10.setForeground(new java.awt.Color(102, 204, 255));
        label10.setText("Telephone  :");
        ModifierInfosEtudiant.add(label10);
        label10.setBounds(480, 50, 230, 25);

        tel.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ModifierInfosEtudiant.add(tel);
        tel.setBounds(480, 90, 210, 40);

        label11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label11.setForeground(new java.awt.Color(102, 204, 255));
        label11.setText("Prenom  :");
        ModifierInfosEtudiant.add(label11);
        label11.setBounds(100, 160, 230, 25);

        label12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label12.setForeground(new java.awt.Color(102, 204, 255));
        label12.setText("Date De Naissance  :");
        ModifierInfosEtudiant.add(label12);
        label12.setBounds(100, 350, 230, 25);

        prenom.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ModifierInfosEtudiant.add(prenom);
        prenom.setBounds(100, 200, 210, 40);

        naissance.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ModifierInfosEtudiant.add(naissance);
        naissance.setBounds(100, 390, 210, 40);

        label22.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label22.setForeground(new java.awt.Color(102, 204, 255));
        label22.setText("Nom  :");
        ModifierInfosEtudiant.add(label22);
        label22.setBounds(100, 250, 230, 25);

        nom.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ModifierInfosEtudiant.add(nom);
        nom.setBounds(100, 290, 210, 40);

        errorLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 51, 51));
        ModifierInfosEtudiant.add(errorLabel);
        errorLabel.setBounds(240, 440, 340, 40);

        getContentPane().add(ModifierInfosEtudiant);
        ModifierInfosEtudiant.setBounds(0, 0, 810, 580);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        // TODO add your handling code here:
        ajouterInformations();
    }//GEN-LAST:event_button7ActionPerformed

    private void textField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfosEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfosEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfosEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfosEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfosEtudiant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel ModifierInfosEtudiant;
    private java.awt.Button button7;
    private java.awt.TextField codePermenant;
    private java.awt.Label errorLabel;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label22;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private java.awt.TextField mail;
    private java.awt.TextField naissance;
    private java.awt.TextField nom;
    private java.awt.TextField prenom;
    private java.awt.TextField tel;
    private java.awt.TextField textField8;
    // End of variables declaration//GEN-END:variables

    private void ajouterInformations() {
       
        // Récupérer les données des formulaires
        int codepermenant = 0;
        try {
            codepermenant = Integer.parseInt(codePermenant.getText());

            String nomEtudiant = nom.getText();
            String prenomEtudiant = prenom.getText();
            String dateNaissance = naissance.getText();
            String adresse = textField8.getText();
            String telephone = tel.getText();
            String email = mail.getText();
            
          

            if (codepermenant == 0 || nomEtudiant.isEmpty() || prenomEtudiant.isEmpty() || dateNaissance.isEmpty() || adresse.isEmpty() || telephone.isEmpty() || email.isEmpty()) {
                setErrorLabel("Veuillez remplir tous les champs ou le code permenant est null .");
//                if(false){
            } else {

                try {
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");

//            dateFormat.setLenient(false);
                    Date ddateNaissance = dateFormat.parse(dateNaissance);
                dateNaissance = outputFormat .format(ddateNaissance);
                
                 // Ajouter l'étudiant à la base de données
        try {
            Connection connection = connecterDB.connecterDB();
            String queryEtudiant = "INSERT INTO etudiants (codePermenant,nom, prenom, dateNaissance, adresse, telephone, email) VALUES (?, ?, ?, ?, ?, ?, ?)";
                        PreparedStatement preparedStatementEtudiant = connection.prepareStatement(queryEtudiant);
             preparedStatementEtudiant.setInt(1, codepermenant);
            preparedStatementEtudiant.setString(2, nomEtudiant);
            preparedStatementEtudiant.setString(3, prenomEtudiant);
            preparedStatementEtudiant.setString(4, dateNaissance);
            preparedStatementEtudiant.setString(5, adresse);
            preparedStatementEtudiant.setString(6, telephone);
            preparedStatementEtudiant.setString(7, email);
  
            preparedStatementEtudiant.executeUpdate();
       
            preparedStatementEtudiant.close();
            AcceuilEtudiant infos = new AcceuilEtudiant();
                            infos.setVisible(true);
    
                             // Fermer la fenêtre courante  
                            this.dispose(); 
        } catch (SQLException ex) {
            setErrorLabel( "Erreur lors de l'ajout de l'étudiant");
        }

                } catch (ParseException ex) {
                    setErrorLabel("Format de date AAAA-MM-JJ.");

                }

            }

        } catch (Exception e) {
            setErrorLabel("Veuillez un code permenant valide.");
        }

    }

    private void setErrorLabel(String message) {
        errorLabel.setText("Erreur : " + message);
    }
}
